/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import javax.swing.JOptionPane;
import clases.Tabla_Iteraciones;
import java.awt.Color;

public class pnl_Multiplicacion_Matrices extends javax.swing.JPanel {

    /**
     * Creates new form pnlHome
     */
    public pnl_Multiplicacion_Matrices() {
        initComponents();

        //Colocar el rectangulo detras de la tabla de un color personalizado
        jScrollPane1.getViewport().setBackground(Color.white);
        jScrollPane2.getViewport().setBackground(Color.white);
        jScrollPane3.getViewport().setBackground(Color.white);

        //Colocar el texto de la seleccion de un color personalizado
        tbl_Matriz.setSelectionForeground(Color.black);
        tbl_MatrizB.setSelectionForeground(Color.black);

        tbl_MatrizC.setEnabled(false);
        btn_Multiplicar.setEnabled(false);
    }

    Tabla_Iteraciones iteraciones = new Tabla_Iteraciones();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        btn_Aceptar = new javax.swing.JButton();
        btn_Multiplicar = new javax.swing.JButton();
        txt_Col = new javax.swing.JTextField();
        txt_ColB = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_filasB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_filas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_MatrizC = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Matriz = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_MatrizB = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(38, 86, 186));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Multiplicaci√≥n de matrices");

        btn_Aceptar.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        btn_Aceptar.setText("Crear matrices");
        btn_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AceptarActionPerformed(evt);
            }
        });

        btn_Multiplicar.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        btn_Multiplicar.setText("Multiplicar");
        btn_Multiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MultiplicarActionPerformed(evt);
            }
        });

        txt_Col.setBackground(new java.awt.Color(239, 238, 244));
        txt_Col.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        txt_Col.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Col.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        txt_ColB.setBackground(new java.awt.Color(239, 238, 244));
        txt_ColB.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        txt_ColB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_ColB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel6.setText("Filas primer matriz:");

        txt_filasB.setBackground(new java.awt.Color(239, 238, 244));
        txt_filasB.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        txt_filasB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_filasB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel7.setText("Filas segunda matriz:");

        txt_filas.setBackground(new java.awt.Color(239, 238, 244));
        txt_filas.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        txt_filas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_filas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txt_filas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_filasActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel3.setText("Columnas segunda matriz:");

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel2.setText("Columnas primer matriz:");

        tbl_MatrizC.setAutoCreateRowSorter(true);
        tbl_MatrizC.setBackground(new java.awt.Color(204, 199, 228));
        tbl_MatrizC.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tbl_MatrizC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_MatrizC.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tbl_MatrizC.setGridColor(new java.awt.Color(155, 154, 163));
        tbl_MatrizC.setSelectionBackground(new java.awt.Color(204, 199, 228));
        tbl_MatrizC.setShowGrid(true);
        tbl_MatrizC.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbl_MatrizC);
        //jScrollPane2.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        //jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setViewportView(  tbl_MatrizC  );
        jScrollPane3.setColumnHeaderView( tbl_MatrizC.getTableHeader());

        jScrollPane3.getColumnHeader().setVisible(false);
        jScrollPane3.revalidate();
        jScrollPane3.setBorder(null);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        tbl_Matriz.setAutoCreateRowSorter(true);
        tbl_Matriz.setBackground(new java.awt.Color(204, 199, 228));
        tbl_Matriz.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tbl_Matriz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_Matriz.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tbl_Matriz.setGridColor(new java.awt.Color(155, 154, 163));
        tbl_Matriz.setSelectionBackground(new java.awt.Color(204, 199, 228));
        tbl_Matriz.setShowGrid(true);
        jScrollPane1.setViewportView(tbl_Matriz);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportView(  tbl_Matriz  );
        jScrollPane1.setColumnHeaderView( tbl_Matriz.getTableHeader());

        jScrollPane1.getColumnHeader().setVisible(false);
        jScrollPane1.revalidate();
        jScrollPane1.setBorder(null);

        tbl_MatrizB.setAutoCreateRowSorter(true);
        tbl_MatrizB.setBackground(new java.awt.Color(204, 199, 228));
        tbl_MatrizB.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tbl_MatrizB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_MatrizB.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tbl_MatrizB.setGridColor(new java.awt.Color(155, 154, 163));
        tbl_MatrizB.setSelectionBackground(new java.awt.Color(204, 199, 228));
        tbl_MatrizB.setShowGrid(true);
        tbl_MatrizB.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbl_MatrizB);
        //jScrollPane2.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        //jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportView(  tbl_MatrizB  );
        jScrollPane2.setColumnHeaderView( tbl_MatrizB.getTableHeader());

        jScrollPane2.getColumnHeader().setVisible(false);
        jScrollPane2.revalidate();
        jScrollPane2.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_Col, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_filas, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_filasB, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btn_Aceptar)))
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_Multiplicar))
                                    .addComponent(txt_ColB, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_filas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_filasB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Aceptar)
                            .addComponent(btn_Multiplicar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Col, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ColB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AceptarActionPerformed
        // TODO add your handling code here:
        int rows = 0, columns = 0, rows_B = 0, columns_B = 0;

        iteraciones.borrar_Tabla(tbl_Matriz);
        iteraciones.borrar_Tabla(tbl_MatrizB);
        try {
            rows = Integer.parseInt(txt_filas.getText());
            columns = Integer.parseInt(txt_Col.getText());

            rows_B = Integer.parseInt(txt_filasB.getText());
            columns_B = Integer.parseInt(txt_ColB.getText());

            if (columns != rows_B) {
                JOptionPane.showMessageDialog(this, "No se puede realizar la multiplicaci√≥n. \n"
                        + "El n√∫mero de columnas de la primer matriz es diferente al \n"
                        + "n√∫mero de filas de la segunda matriz");
            } else {
                iteraciones.generar(rows, columns, tbl_Matriz);
                iteraciones.generar(rows_B, columns_B, tbl_MatrizB);
                iteraciones.centrar(tbl_Matriz);
                iteraciones.centrar(tbl_MatrizB);
                btn_Multiplicar.setEnabled(true);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Favor de llenar correctamente todos los campos");
        }
    }//GEN-LAST:event_btn_AceptarActionPerformed

    private void btn_MultiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MultiplicarActionPerformed
        // TODO add your handling code here:
        int fila = 0, fila_B = 0, columna_B = 0, columna_A = 0, i = 0, j = 0;

        try {
            
            if (iteraciones.validCheck(tbl_Matriz) && iteraciones.validCheck(tbl_MatrizB)) {
                fila = Integer.parseInt(txt_filas.getText());
                columna_B = Integer.parseInt(txt_ColB.getText());
                columna_A = Integer.parseInt(txt_Col.getText());
                fila_B = Integer.parseInt(txt_filasB.getText());

                Object object_A[][] = iteraciones.getTableData(tbl_Matriz);
                Object object_B[][] = iteraciones.getTableData(tbl_MatrizB);

                double m_A[][] = new double[fila][columna_A];
                double m_B[][] = new double[fila_B][columna_B];

                for (i = 0; i < tbl_Matriz.getRowCount(); i++) {
                    for (j = 0; j < tbl_Matriz.getColumnCount(); j++) {
                        m_A[i][j] = Double.parseDouble((String) object_A[i][j]);
                    }
                }

                for (i = 0; i < tbl_MatrizB.getRowCount(); i++) {
                    for (j = 0; j < tbl_MatrizB.getColumnCount(); j++) {
                        m_B[i][j] = Double.parseDouble((String) object_B[i][j]);
                    }
                }

                double m_C[][] = new double[fila][columna_B];
                for (i = 0; i < tbl_Matriz.getRowCount(); i++) {
                    for (j = 0; j < tbl_MatrizB.getColumnCount(); j++) {
                        for (int c_A = 0; c_A < columna_A; c_A++) {
                            m_C[i][j] += m_A[i][c_A] * m_B[c_A][j];
                        }
                    }
                }

                iteraciones.mostrar_Matriz(m_C, fila, columna_B, tbl_MatrizC);
                iteraciones.centrar(tbl_MatrizC);
            } else {
                JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe llenar todas las celdas");
        }
    }//GEN-LAST:event_btn_MultiplicarActionPerformed

    private void txt_filasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_filasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_filasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Aceptar;
    private javax.swing.JButton btn_Multiplicar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbl_Matriz;
    private javax.swing.JTable tbl_MatrizB;
    private javax.swing.JTable tbl_MatrizC;
    private javax.swing.JTextField txt_Col;
    private javax.swing.JTextField txt_ColB;
    private javax.swing.JTextField txt_filas;
    private javax.swing.JTextField txt_filasB;
    // End of variables declaration//GEN-END:variables
}
